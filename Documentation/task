# Task Management

~~관련 리소스가 아직 정리되지 않은 좀비 태스크는 init 태스크에서 마무리
처리된다. 즉, 적절한 시점에 init 태스크가 활성화되어야만 보다 많은 가용
메모리를 확보할 수 있다. 가령, 수많은 스레드가 반복 생성될 때 연산을 마무리한
스레드를 제때에 정리해주지 않으면 곧 가용 메모리 공간을 모두 소진하게 된다.
이를 방지하기 위해 해당 업무를 처리하는 init 태스크의 우선순위는 런타임에
동적으로 변한다. 일례로 init 태스크의 기본 우선순위는 `LEAST_PRIORIITY` 이지만,
리얼타임 태스크가 스래드를 생성/삭제한다면 init 태스크의 우선순위는 순간적으로
해당 리얼타임 태스크의 우선순위로 도약한다. 이는 init 태스크의 실행 기회를
확보하여 해당 업무를 처리하기 위함이다.~~

리얼타임 태스크 수행중에 init 태스크의 우선순위를 상향조정하면 리얼타임
태스크의 cpu 점유시간이 그만큼 줄어든다. 메모리 사용은 사용자에게 맡기고 init
태스크의 우선순위는 최하위 순위를 유지하는 것이 리얼타임 특성을 유지하는
방법이겠다.
